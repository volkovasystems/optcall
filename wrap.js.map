{"version":3,"sources":["wrap.module.js"],"names":[],"mappings":"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","file":"wrap.js","sourcesContent":["\"use strict\";\n\n/*;\n\t@submodule-license:\n\t\tThe MIT License (MIT)\n\t\t@mit-license\n\n\t\tCopyright (@c) 2017 Richeve Siodina Bebedor\n\t\t@email: richeve.bebedor@gmail.com\n\n\t\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\t\tof this software and associated documentation files (the \"Software\"), to deal\n\t\tin the Software without restriction, including without limitation the rights\n\t\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t\tcopies of the Software, and to permit persons to whom the Software is\n\t\tfurnished to do so, subject to the following conditions:\n\n\t\tThe above copyright notice and this permission notice shall be included in all\n\t\tcopies or substantial portions of the Software.\n\n\t\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\t\tSOFTWARE.\n\t@end-submodule-license\n\n\t@submodule-configuration:\n\t\t{\n\t\t\t\"package\": \"optcall\",\n\t\t\t\"path\": \"optcall/wrap.js\",\n\t\t\t\"file\": \"wrap.js\",\n\t\t\t\"module\": \"optcall\",\n\t\t\t\"author\": \"Richeve S. Bebedor\",\n\t\t\t\"contributors\": [\n\t\t\t\t\"John Lenon Maghanoy <johnlenonmaghanoy@gmail.com>\"\n\t\t\t],\n\t\t\t\"eMail\": \"richeve.bebedor@gmail.com\",\n\t\t\t\"repository\": \"https://github.com/volkovasystems/optcall.git\",\n\t\t\t\"test\": \"optcall-test.js\",\n\t\t\t\"global\": true\n\t\t}\n\t@end-submodule-configuration\n\n\t@submodule-documentation:\n\t\tWrapper function for option callback procedure.\n\t@end-submodule-documentation\n\n\t@include:\n\t\t{\n\t\t\t\"async\": \"async\",\n\t\t\t\"ate\": \"ate\",\n\t\t\t\"called\": \"called\",\n\t\t\t\"clazof\": \"clazof\",\n\t\t\t\"depher\": \"depher\",\n\t\t\t\"falzy\": \"falzy\",\n\t\t\t\"harden\": \"harden\",\n\t\t\t\"kloak\": \"kloak\",\n\t\t\t\"glucose\": \"glucose\",\n\t\t\t\"optfor\": \"optfor\",\n\t\t\t\"protype\": \"protype\",\n\t\t\t\"raze\": \"raze\",\n\t\t\t\"snapd\": \"snapd\",\n\t\t\t\"transpher\": \"transpher\",\n\t\t\t\"truly\": \"truly\",\n\t\t\t\"truu\": \"truu\"\n\t\t}\n\t@end-include\n*/\n\nconst ate = require( \"ate\" );\nconst called = require( \"called\" );\nconst clazof = require( \"clazof\" );\nconst depher = require( \"depher\" );\nconst falzy = require( \"falzy\" );\nconst harden = require( \"harden\" );\nconst kloak = require( \"kloak\" );\nconst glucose = require( \"glucose\" );\nconst optfor = require( \"optfor\" );\nconst protype = require( \"protype\" );\nconst raze = require( \"raze\" );\nconst snapd = require( \"snapd\" );\nconst series = require( \"async\" ).series;\nconst transpher = require( \"transpher\" );\nconst truly = require( \"truly\" );\nconst truu = require( \"truu\" );\n\nharden( \"CHAIN_MODE\", Symbol.for( \"chain-mode\" ) );\nharden( \"OPTCALL_DELEGATED\", \"optcall-delegated\" );\n\n/*;\n\t@note:\n\t\tThis should not be accessible outside.\n\t@end-note\n*/\nconst CHAIN_HANDLER = Symbol( \"chain-handler\" );\nconst CALL_STACK = Symbol( \"call-stack\" );\n\nconst wrap = function wrap( method ){\n\t/*;\n\t\t@meta-configuration:\n\t\t\t{\n\t\t\t\t\"method:required\": \"function\"\n\t\t\t}\n\t\t@end-meta-configuration\n\t*/\n\n\tlet property = method.name;\n\n\tif( method.OPTCALL_DELEGATED === OPTCALL_DELEGATED ){\n\t\treturn method;\n\t}\n\n\tlet delegate = function delegate( option, callback ){\n\t\tlet parameter = raze( arguments );\n\n\t\t/*;\n\t\t\t@note:\n\t\t\t\tDo not execute if the first parameter is not an object\n\t\t\t\t\tand if the first parameter is not an object then it should\n\t\t\t\t\tnot be in chain mode.\n\t\t\t@end-note\n\t\t*/\n\t\tif( !protype( parameter[ 0 ], OBJECT ) &&\n\t\t\t( falzy( this.option ) ||\n\t\t\t\t!clazof( this.option, \"Option\" ) ||\n\t\t\t\t!this.chained( ) ) )\n\t\t{\n\t\t\treturn this;\n\t\t}\n\n\t\toption = depher( parameter, OBJECT, this.option );\n\t\tlet self = option.self || this;\n\n\t\tself.option = self.option || option;\n\t\tself.option = glucose.bind( self )( self.option );\n\n\t\toption = glucose.bind( self )( option );\n\n\t\tself.option.mix( option );\n\n\t\tcallback = optfor( parameter, FUNCTION );\n\t\tcallback = called.bind( self )( callback );\n\n\t\tif( self.chained( ) ){\n\t\t\tif( truly( self[ CHAIN_HANDLER ] ) ){\n\t\t\t\tself[ CHAIN_HANDLER ].halt( );\n\t\t\t}\n\n\t\t\tif( falzy( self[ CALL_STACK ] ) ){\n\t\t\t\tharden( CALL_STACK, [ ], self );\n\t\t\t}\n\n\t\t\tself[ CALL_STACK ].push( {\n\t\t\t\t\"option\": option,\n\t\t\t\t\"self\": self,\n\t\t\t\t\"method\": method,\n\t\t\t\t\"callback\": callback\n\t\t\t} );\n\n\t\t\tself[ CHAIN_HANDLER ] = snapd.bind( self )\n\t\t\t\t( function chain( ){\n\t\t\t\t\t/*;\n\t\t\t\t\t\t@todo:\n\t\t\t\t\t\t\tWe will drop usage to any async methods from third party modules.\n\t\t\t\t\t\t@end-todo\n\t\t\t\t\t*/\n\t\t\t\t\tseries( this[ CALL_STACK ]\n\t\t\t\t\t\t.map( ( function onEachCall( call, index ){\n\t\t\t\t\t\t\t/*;\n\t\t\t\t\t\t\t\t@note:\n\t\t\t\t\t\t\t\t\tThe first call to the chained method will transfer\n\t\t\t\t\t\t\t\t\t\tthe properties to the main option.\n\t\t\t\t\t\t\t\t@end-note\n\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\tif( index === 0 ){\n\t\t\t\t\t\t\t\tcall.option.transfer( this.option );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn ( function delegate( tellback ){\n\t\t\t\t\t\t\t\tlet done = called.bind( this )\n\t\t\t\t\t\t\t\t\t( function done( issue, result, option ){\n\t\t\t\t\t\t\t\t\t\tcall.handler.halt( );\n\n\t\t\t\t\t\t\t\t\t\toption = glucose.bind( this )( option );\n\n\t\t\t\t\t\t\t\t\t\toption.result = result;\n\n\t\t\t\t\t\t\t\t\t\tcall.callback( issue, result, option );\n\n\t\t\t\t\t\t\t\t\t\t/*;\n\t\t\t\t\t\t\t\t\t\t\t@note:\n\t\t\t\t\t\t\t\t\t\t\t\tThis should be called after the callback.\n\t\t\t\t\t\t\t\t\t\t\t@end-note\n\t\t\t\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\t\t\t\tthis.option.mix( option );\n\t\t\t\t\t\t\t\t\t\tthis.option.result = option.result;\n\n\t\t\t\t\t\t\t\t\t\ttellback( issue, result );\n\t\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t\tcall.handler = snapd.bind( this )\n\t\t\t\t\t\t\t\t\t( function fallback( ){\n\t\t\t\t\t\t\t\t\t\tdone( new Error( \"failed to call callback\" ) );\n\t\t\t\t\t\t\t\t\t}, 1000 * 5 );\n\n\t\t\t\t\t\t\t\t/*;\n\t\t\t\t\t\t\t\t\t@note:\n\t\t\t\t\t\t\t\t\t\tSucceeding calls must communicate through cache and result.\n\t\t\t\t\t\t\t\t\t@end-note\n\t\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\t\tcall.option.mix( this.option );\n\t\t\t\t\t\t\t\tcall.option.result = this.option.result;\n\n\t\t\t\t\t\t\t\tlet option = call.option.empty( )? this.option : call.option;\n\n\t\t\t\t\t\t\t\tcall.method.bind( this )( option, done );\n\t\t\t\t\t\t\t} ).bind( this );\n\t\t\t\t\t\t} ).bind( this ) ),\n\n\t\t\t\t\t\t( function lastly( issue, resultList ){\n\t\t\t\t\t\t\t/*;\n\t\t\t\t\t\t\t\t@note:\n\t\t\t\t\t\t\t\t\tThis will get the last callback from the chain.\n\t\t\t\t\t\t\t\t@end-note\n\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\tlet callback = this[ CALL_STACK ].reverse( )[ 0 ].callback;\n\n\t\t\t\t\t\t\tlet result = resultList.pop( );\n\n\t\t\t\t\t\t\tcallback( issue, result, this.option );\n\n\t\t\t\t\t\t\tif( protype( this.emit, FUNCTION ) ){\n\t\t\t\t\t\t\t\tthis.emit( \"done\", issue, result, this.option );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\twhile( this[ CALL_STACK ].length ){\n\t\t\t\t\t\t\t\tlet call = this[ CALL_STACK ].pop( );\n\n\t\t\t\t\t\t\t\tif( truu( call ) ){\n\t\t\t\t\t\t\t\t\tcall.handler.halt( );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis[ CHAIN_HANDLER ].halt( );\n\t\t\t\t\t\t\tthis.release( );\n\n\t\t\t\t\t\t\tsnapd.bind( this )( this.option.clear, 1000 * 1 );\n\t\t\t\t\t\t} ).bind( this ) );\n\t\t\t\t} );\n\n\t\t}else{\n\t\t\tsnapd.bind( this )( this.option.clear, 1000 * 1 );\n\n\t\t\treturn method.bind( self )\n\t\t\t\t( ( option.empty( )? self.option : option ), called.bind( self )\n\t\t\t\t\t( function onResult( issue, result, option ){\n\t\t\t\t\t\toption.result = result;\n\n\t\t\t\t\t\tthis.option.mix( option );\n\t\t\t\t\t\tthis.option.transfer( option );\n\n\t\t\t\t\t\tcallback( issue, result, option );\n\t\t\t\t\t} ) );\n\t\t}\n\n\t\treturn self;\n\t};\n\n\tkloak( method, delegate, OPTCALL_DELEGATED, property );\n\n\treturn delegate;\n};\n\nmodule.exports = wrap;\n"]}